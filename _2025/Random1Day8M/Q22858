package Random._2025.Random1Day8M;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class Q22858 {

    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st = new StringTokenizer(br.readLine());

        int n = Integer.parseInt(st.nextToken());
        int k = Integer.parseInt(st.nextToken());

        int[] s = new int[n+1];
        StringTokenizer st1 = new StringTokenizer(br.readLine());
        for (int i = 1; i <= n; i++) {
            s[i] = Integer.parseInt(st1.nextToken());
            //   4    1    3    5    2
            // s[1] s[2] s[3] s[4] s[5]
        }

        int[] d = new int[n+1];
        StringTokenizer st2 = new StringTokenizer(br.readLine());
        for (int i = 1; i <= n; i++) {
            d[i] = Integer.parseInt(st2.nextToken());
            //   4    3    1    2    5
            // d[1] d[2] d[3] d[4] d[5]
        }

        int[] p = new int[n+1];
        int[] temp = new int[n+1];

        for (int i = 0; i < k; i++) {
            for (int j = 1; j <= n; j++) {
                temp[j] = s[j];
            }

            for (int j = 1; j <= n; j++) {
                s[d[j]] = temp[j];
            }
            // s[d[1]] = s[1]
            // s[d[2]] = s[2]
            // s[d[3]] = s[3]
            // s[d[4]] = s[4]
            // s[d[5]] = s[5]
        }

        for (int i = 1; i <= n; i++) {
            p[i] = s[i];
            System.out.print(p[i] + " ");
        }

    }
}
/*
셔플시 주의 사항
※ 정방향 셔플 => 입력 예시 모두 정방향으로 해도 맞도록 나옴.
역방향 셔플
 */

/*
temp 사용
이 문제는 swap 하는 문제가 아님.
단순히 값을 따로 읽고 따로 넣는 문제

첫번째 반복문
temp[j] = s[d[j]] // 읽기(셔플 위치에서 값 가져오기)

두번째 반복문
s[j] = temp[j] // 쓰기 (임시 배열 값을 원래 배열에 덮어 쓰기)
 */
