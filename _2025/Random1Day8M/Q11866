// 요세푸스 문제 0
package Random._2025.Random1Day8M;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.LinkedList;
import java.util.Queue;
import java.util.StringTokenizer;

public class Q11866 {

    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st = new StringTokenizer(br.readLine());

        int n = Integer.parseInt(st.nextToken());
        int k = Integer.parseInt(st.nextToken());

        Queue<Integer> q = new LinkedList<>();
        for (int i = 1; i <= n; i++) {
            q.add(i);
        }


        System.out.print("<");
        while (!q.isEmpty()) {
            for (int i = 1; i <= k - 1; i++) {
                int cur = q.poll();
                q.add(cur);
            }

            int result = q.poll();
            System.out.print(result);

            // 숫자 하나 출력하고, 뒤에 출력할 숫자가 더 있으면 쉼표,
            if (!q.isEmpty()) {
                System.out.print(", ");
            }
        }

        System.out.print(">");
    }
}
// 1 2 3 4 5 6 7

// 1 2   4 5 6 7
// => 3

// 1 2   4 5   7
// => 6

// 1     4 5   7
// => 2

// 1     4 5
// => 7

// 5 1 4
