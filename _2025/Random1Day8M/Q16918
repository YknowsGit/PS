// [빡구현 100선] - 붐버맨
package Random._2025.Random1Day8M;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class Q16918 {

    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st = new StringTokenizer(br.readLine());

        int r = Integer.parseInt(st.nextToken());
        int c = Integer.parseInt(st.nextToken());
        int n = Integer.parseInt(st.nextToken());

        int[] dx = {0, 0, 1, -1};
        int[] dy = {1, -1, 0, 0};
        Character[][] board = new Character[r][c];
        for (int i = 0; i < r; i++) {
            String str = br.readLine();
            for (int j = 0; j < c; j++) {
                board[i][j] = str.charAt(j);
            }
        }

        if (n == 1) {

            for (int k = 0; k < r; k++) {
                for (int l = 0; l < c; l++) {
                    System.out.print(board[k][l]);
                }
                System.out.println();
            }
            return;
        }

        if (n % 2 == 0) {

            for (int k = 0; k < r; k++) {
                for (int l = 0; l < c; l++) {
                    System.out.print('O');
                }
                System.out.println();
            }
            return;
        }

        // 1차 폭발
        boolean[][] boomb1 = new boolean[r][c];
        for (int k = 0; k < r; k++) {
            for (int l = 0; l < c; l++) {
                if (board[k][l] == 'O') {
                    boomb1[k][l] = true;

                    for (int dir = 0; dir < 4; dir++) {
                        int nx = k + dx[dir];
                        int ny = l + dy[dir];

                        if (nx < 0 || nx >= r || ny < 0 || ny >= c) continue;
                        boomb1[nx][ny] = true;
                    }
                }
            }
        }

        Character[][] afterBoomb1 = new Character[r][c];
        for (int k = 0; k < r; k++) {
            for (int l = 0; l < c; l++) {
                if (boomb1[k][l]) {
                    afterBoomb1[k][l] = '.';
                } else {
                    afterBoomb1[k][l] = 'O';
                }
            }
        }

        if (n % 4 == 3) {
            for (int k = 0; k < r; k++) {
                for (int l = 0; l < c; l++) {
                    System.out.print(afterBoomb1[k][l]);
                }
                System.out.println();
            }
            return;
        }


        // 2차 폭발
        boolean[][] boomb2 = new boolean[r][c];
        for (int k = 0; k < r; k++) {
            for (int l = 0; l < c; l++) {
                if (afterBoomb1[k][l] == 'O') {
                    boomb2[k][l] = true;
                    for (int dir = 0; dir < 4; dir++) {
                        int nx = k + dx[dir];
                        int ny = l + dy[dir];
                        if (nx < 0 || nx >= r || ny < 0 || ny >= c) continue;
                        boomb2[nx][ny] = true;
                    }
                }
            }
        }

        Character[][] afterBoomb2 = new Character[r][c];
        for (int k = 0; k < r; k++) {
            for (int l = 0; l < c; l++) {
                if (boomb2[k][l]) afterBoomb2[k][l] = '.';
                else afterBoomb2[k][l] = 'O';
            }
        }

        // n % 4 == 1 && n > 1
        for (int k = 0; k < r; k++) {
            for (int l = 0; l < c; l++) {
                System.out.print(afterBoomb2[k][l]);
            }
            System.out.println();
        }

    }
}
/*
1 ~5
1초 상태 = 5초 상태 => board[r][c] 초기 상태
2초 상태 = 4초 상태 => board[r][c] 꽉 찬 상태
★ 3초 상태 => 폭탄이 터진 상태

일반화

if (n % 2 == 0) {
    => 'O' 꽉 찬 상태
} else {
        if (n % 4 == 1) {
            => 초기 상태
        } else {
            => ★ 폭탄
        }
    }

=> 틀림 

★ "3초 전 설치된 폭탄이 동시에 터진다"
=> 문제 똑바로 읽기, 항상 주어진 입력예시와 다른 예시로 문제 이해 높이기
 */
/*
O.O.O
.....
O.O.O
.....
O.O.O
<0초>

O.O.O
.....
O.O.O
.....
O.O.O
<1초>

OOOOO
OOOOO
OOOOO
OOOOO
OOOOO
<2초>

.....
.O.O.
.....
.O.O.
.....
<3초>

.....
.O.O.
.....
.O.O.
.....
<4초>

O.O.O
O...O
O.O.O
O...O
O.O.O
<5초>

 */
