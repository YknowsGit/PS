// 빈도 정렬
package Random._2025.Random1Day7M;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.*;

public class Q2910 {

    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st = new StringTokenizer(br.readLine());

        int n = Integer.parseInt(st.nextToken());
        int c = Integer.parseInt(st.nextToken());
        int[] arr = new int[n];
        StringTokenizer st1 = new StringTokenizer(br.readLine());
        for (int i = 0; i < n; i++) {
            arr[i] = Integer.parseInt(st1.nextToken());
        }

        LinkedHashMap<Integer, Integer> map = new LinkedHashMap<>();
        for (int i = 0; i < n; i++) {
            // 숫자를 순회하면서 새로운 수가 들어가면 count++하면서 map에 넣고
            // map 안에 기존에 있던 수면 그냥 count++만하도록 작성
            if (map.containsKey(arr[i])) {
                map.put(arr[i], map.get(arr[i]) + 1);
            } else {
                map.put(arr[i], 1);
            }
        }

        // map 안에 들어있는 valuse = count크기 가 큰순서로
        // 각 values의 keySet을 반환
        ArrayList<Integer> list = new ArrayList<Integer>(map.keySet());
        Collections.sort(list, new Comparator<Integer>() {
            @Override
            public int compare(Integer o1, Integer o2) {
                return map.get(o2) - map.get(o1);
            }
        });

        for (int i = 0; i < list.size(); i++) {
            int num = list.get(i);
            int cnt = map.get(num);
            for (int j = 0; j < cnt; j++) {
                System.out.print(num + " ");
            }
        }

    }
}
/*

        // 2 1 2 1 2 => 2 2 2 1 1
        // 1 3 3 3 2 2 2 1 1 => 1 1 1 3 3 3 2 2 2
        // 11 33 11 77 54 11 25 25 33 => 11 11 11 33 33 25 25 77 54
 */
/*
★★★ 1. 정렬 기준(Comparator)
빈도 기준 정렬을 위한 compare() 커스터마이징 how?

★★★ 2. Map의 역할 get/put 사용
등장 횟수 저장을 위한 put, containsKey +a) getOrDefault

★★★ 3. LinkedHashMap의 순서 유지

★★ 4. Collections.sort()와 리스트 정렬
Map 자체는 정렬 불가, keySet -> List로 바꾸어 정렬

★★ 5. Collection, Collections, Comparator 다시 공부하기!!

 */
