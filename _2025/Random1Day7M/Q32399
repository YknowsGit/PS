// 햄버거 정렬 (위치 인덱스 기반 코드로 수정하기)
package Random._2025.Random1Day7M;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class Q32399 {

    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        String s = br.readLine();
        if (s.equals("1)(") || s.equals("()1") || s.equals("1()") || s.equals(")(1")) {
            System.out.println(1);
        } else if (s.equals(")1(")) {
            System.out.println(2);
        } else {
            System.out.println(0);
        }

    }
}
/*
(1) => 0
()1 => 1

1)( => 1
1() => 1

)1( => 2
)(1 => 1

 */
/* ★ indexOf 로 인덱스 기반 코드
public class Q32399 {
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        String s = br.readLine();

        int open = s.indexOf('(');  // 여는 괄호 위치
        int one = s.indexOf('1');   // 숫자 1 위치
        int close = s.indexOf(')'); // 닫는 괄호 위치

        // 이미 햄버거 문자열이면
        if (open < one && one < close) {
            System.out.println(0);
        }
        // 괄호 하나만 자리를 바꾸면 되면
        else if ((one < open && open < close) || (open < close && close < one) || (one < close && close < open) || (close < open && open < one)) {
            System.out.println(1);
        }
        // 두 번 이동해야 되는 경우
        else {
            System.out.println(2);
        }
    }
}
 */
